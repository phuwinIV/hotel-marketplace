let express,formidable,hotelOwner,requiredSignin,create,hotels,image,sellerHotels,remove,read,update,userHotelBookings,isAlreadyBook,searchListings;_c8d‍.w("express",[["default",["express"],function(v){express=v}]]);_c8d‍.w("express-formidable",[["default",["formidable"],function(v){formidable=v}]]);_c8d‍.w("../middleware",[["hotelOwner",["hotelOwner"],function(v){hotelOwner=v}],["requiredSignin",["requiredSignin"],function(v){requiredSignin=v}]]);_c8d‍.w("../controllers/hotel",[["create",["create"],function(v){create=v}],["hotels",["hotels"],function(v){hotels=v}],["image",["image"],function(v){image=v}],["sellerHotels",["sellerHotels"],function(v){sellerHotels=v}],["remove",["remove"],function(v){remove=v}],["read",["read"],function(v){read=v}],["update",["update"],function(v){update=v}],["userHotelBookings",["userHotelBookings"],function(v){userHotelBookings=v}],["isAlreadyBook",["isAlreadyBook"],function(v){isAlreadyBook=v}],["searchListings",["searchListings"],function(v){searchListings=v}]]);


const router = express.Router();

// middleware


//controllers













router.post('/create-hotel', requiredSignin, formidable(), create);
router.get('/hotels', hotels);
router.get('/hotel/image/:hotelId', image);
router.get('/seller-hotels', requiredSignin, sellerHotels);
router.delete('/delete-hotel/:hotelId', requiredSignin, hotelOwner, remove);
router.get('/hotel/:hotelId', read);
router.put(
   '/update-hotel/:hotelId',
   requiredSignin,
   hotelOwner,
   formidable(),
   update
);
router.post('/search-listings', searchListings);

// orders
router.get('/user-hotel-bookings', requiredSignin, userHotelBookings);
router.get('/is-already-booked/:hotelId', requiredSignin, isAlreadyBook);

module.exports = router;
